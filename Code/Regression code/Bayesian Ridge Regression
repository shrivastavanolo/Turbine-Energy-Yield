{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1R5Awftz2HG2nn7vsCm_egt4BoOa6bZ7w","timestamp":1686242341726}],"authorship_tag":"ABX9TyMsjts7ohNavuERtWu5+TVx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"44Rya0p4zUGC","executionInfo":{"status":"ok","timestamp":1686569105112,"user_tz":-330,"elapsed":2029,"user":{"displayName":"Shreya Shrivastava","userId":"13338107023140459226"}}},"outputs":[],"source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_absolute_error\n","from sklearn.linear_model import BayesianRidge\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["data= pd.read_csv(\"/content/gt_2015.csv\")\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"S_BkH_uW0GPD","executionInfo":{"status":"ok","timestamp":1686569105113,"user_tz":-330,"elapsed":9,"user":{"displayName":"Shreya Shrivastava","userId":"13338107023140459226"}},"outputId":"f486f516-c62b-4be1-8fbf-12323c936203"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        AT      AP      AH    AFDP    GTEP     TIT     TAT     TEY     CDP  \\\n","0  1.95320  1020.1  84.985  2.5304  20.116  1048.7  544.92  116.27  10.799   \n","1  1.21910  1020.1  87.523  2.3937  18.584  1045.5  548.50  109.18  10.347   \n","2  0.94915  1022.2  78.335  2.7789  22.264  1068.8  549.95  125.88  11.256   \n","3  1.00750  1021.7  76.942  2.8170  23.358  1075.2  549.63  132.21  11.702   \n","4  1.28580  1021.6  76.732  2.8377  23.483  1076.2  549.68  133.58  11.737   \n","\n","       CO      NOX  \n","0  7.4491  113.250  \n","1  6.4684  112.020  \n","2  3.6335   88.147  \n","3  3.1972   87.078  \n","4  2.3833   82.515  "],"text/html":["\n","  <div id=\"df-f8866475-182a-41e8-80d8-01e66f499fbe\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AT</th>\n","      <th>AP</th>\n","      <th>AH</th>\n","      <th>AFDP</th>\n","      <th>GTEP</th>\n","      <th>TIT</th>\n","      <th>TAT</th>\n","      <th>TEY</th>\n","      <th>CDP</th>\n","      <th>CO</th>\n","      <th>NOX</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.95320</td>\n","      <td>1020.1</td>\n","      <td>84.985</td>\n","      <td>2.5304</td>\n","      <td>20.116</td>\n","      <td>1048.7</td>\n","      <td>544.92</td>\n","      <td>116.27</td>\n","      <td>10.799</td>\n","      <td>7.4491</td>\n","      <td>113.250</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.21910</td>\n","      <td>1020.1</td>\n","      <td>87.523</td>\n","      <td>2.3937</td>\n","      <td>18.584</td>\n","      <td>1045.5</td>\n","      <td>548.50</td>\n","      <td>109.18</td>\n","      <td>10.347</td>\n","      <td>6.4684</td>\n","      <td>112.020</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.94915</td>\n","      <td>1022.2</td>\n","      <td>78.335</td>\n","      <td>2.7789</td>\n","      <td>22.264</td>\n","      <td>1068.8</td>\n","      <td>549.95</td>\n","      <td>125.88</td>\n","      <td>11.256</td>\n","      <td>3.6335</td>\n","      <td>88.147</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.00750</td>\n","      <td>1021.7</td>\n","      <td>76.942</td>\n","      <td>2.8170</td>\n","      <td>23.358</td>\n","      <td>1075.2</td>\n","      <td>549.63</td>\n","      <td>132.21</td>\n","      <td>11.702</td>\n","      <td>3.1972</td>\n","      <td>87.078</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.28580</td>\n","      <td>1021.6</td>\n","      <td>76.732</td>\n","      <td>2.8377</td>\n","      <td>23.483</td>\n","      <td>1076.2</td>\n","      <td>549.68</td>\n","      <td>133.58</td>\n","      <td>11.737</td>\n","      <td>2.3833</td>\n","      <td>82.515</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8866475-182a-41e8-80d8-01e66f499fbe')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f8866475-182a-41e8-80d8-01e66f499fbe button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f8866475-182a-41e8-80d8-01e66f499fbe');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["1. For CO Prediction using Turbine Inlet temperature, Compressor discharge pressure, Turbine energy yield, Gas turbine exhaust pressure\n"],"metadata":{"id":"8gzkIExc2cyj"}},{"cell_type":"code","source":["X1=data[[\"TIT\",\"CDP\",\"TEY\",\"GTEP\"]] \n","y1=data[\"CO\"] \n","# Splitting dataset into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X1, y1, test_size = 0.3, random_state = 4)"],"metadata":{"id":"uBT1WlZY2TOa","executionInfo":{"status":"ok","timestamp":1686569105113,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shreya Shrivastava","userId":"13338107023140459226"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Creating and training model\n","model = BayesianRidge()\n","model.fit(X_train, y_train)\n","# Model making a prediction on test data\n","prediction = model.predict(X_test) "],"metadata":{"id":"4zGBwEXO0HSl","executionInfo":{"status":"ok","timestamp":1686569105114,"user_tz":-330,"elapsed":7,"user":{"displayName":"Shreya Shrivastava","userId":"13338107023140459226"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# Evaluation of r2 score of the model against the test set\n","print(f\"mae Of Test Set : {mean_absolute_error(y_test, prediction)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"th6dsJmm0I8Q","executionInfo":{"status":"ok","timestamp":1686569105525,"user_tz":-330,"elapsed":418,"user":{"displayName":"Shreya Shrivastava","userId":"13338107023140459226"}},"outputId":"051260d7-9960-493c-d943-65066fb12953"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["mae Of Test Set : 0.7357092952814664\n"]}]},{"cell_type":"markdown","source":["2. For NOx Prediction using Ambient Temperature, Gas Turbine Exhaust Pressure, Turbine inlet Temperature"],"metadata":{"id":"JQ2bRmL32g_g"}},{"cell_type":"code","source":["X2=data[[\"AT\",\"GTEP\",\"TIT\"]]\n","y2=data[\"NOX\"]\n","X2_train, X2_test, Y2_train, Y2_test = train_test_split(X2,y2,train_size=0.87,random_state=70,shuffle=True)\n","model2=BayesianRidge()\n","model2.fit(X2_train,Y2_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"LlPqOC2q2X4v","executionInfo":{"status":"ok","timestamp":1686569105526,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shreya Shrivastava","userId":"13338107023140459226"}},"outputId":"c1b0eb19-44df-4067-c042-c6fd0e7e2665"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BayesianRidge()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BayesianRidge()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">BayesianRidge</label><div class=\"sk-toggleable__content\"><pre>BayesianRidge()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["predictions2=model2.predict(X2_test)\n","rmse2 = mean_absolute_error(Y2_test, predictions2)\n","print('The mae is: ', rmse2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yek6JeSG2xT9","executionInfo":{"status":"ok","timestamp":1686569105526,"user_tz":-330,"elapsed":5,"user":{"displayName":"Shreya Shrivastava","userId":"13338107023140459226"}},"outputId":"aacee470-dc6b-46ef-8f1f-02c008e269db"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["The mae is:  5.971162502863076\n"]}]}]}